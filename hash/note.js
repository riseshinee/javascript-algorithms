/**
 * 해시 테이블
 * key-value 기반의 자료구조
 * put(), get()
 * ex) localstorage: 브라우저 기본 객체
 */

/**
 * 해시 함수: 특정 키를 자료를 저장하는 배열의 인덱스로 변환함
 * 결정성: 동일한 키는 동일한 해시 값을 생성해야 한다.
 * 효율성: 시간 복잡도가 O(1)이어야 한다.
 * 균일한 분배: 배열 전체를 최대한 활용해야 한다.
 */

/**
 * 소수 해싱의 중요성: 소수를 사용한 모듈러 나눗셈이 균등한 배열 인덱스를 생성함
 * 충돌이 생길 수 있음
 */

/**
 * 선형탐사: 한번에 한 인덱스를 증가시킴
 * 단점: 군집(cluster)가 쉽게 발생함, 
 */

/**
 * 이차탐사: 완전제곱을 사용하여 인덱스를 증가시킴,
 */

/**
 * 재해싱, 이중해싱: 이차 해싱 함수를 사용해 원래 해싱함수 결과를 한번 더 해싱
 * 이전과 달라야 하고, 효율적이여야하고, 0이 아니여아 한다.
 */